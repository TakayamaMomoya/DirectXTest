//==================================================================================================
//
//debugproc.cpp
//Author:髙山桃也
//
//==================================================================================================

#include "main.h"
#include "debugProc.h"
#include <stdio.h>
#include <assert.h>

//マクロ定義
#define MAX_STRING				(2048)			//最大文字数

//グローバル変数宣言
LPD3DXFONT g_pFont = NULL;						//フォントへのポインタ
char g_aStrDebug[MAX_STRING];					//文字列を格納するバッファ

//==================================================================================================
//初期化処理
//==================================================================================================
void InitDebugProc(void)
{
	int n = 8;

	//デバイスポインタ設定
	LPDIRECT3DDEVICE9 pDevice = GetDevice();

	//デバッグ表示のフォント生成
	D3DXCreateFont(pDevice, 18, 0, 0, 0, FALSE, SHIFTJIS_CHARSET, OUT_DEFAULT_PRECIS, DEFAULT_QUALITY,
		DEFAULT_PITCH, "Terminal", &g_pFont);

	//バッファのクリア
	memset(&g_aStrDebug, 0, sizeof(g_aStrDebug));

	PrintDebugProc("あいう");
}

//==================================================================================================
//終了処理
//==================================================================================================
void UninitDebugProc(void)
{
	if (g_pFont != NULL)
	{//フォントの破棄
		g_pFont->Release();
		g_pFont = NULL;
	}
}

//==================================================================================================
//更新処理
//==================================================================================================
void UpdateDebugProc(void)
{
}

//==================================================================================================
//描画処理
//==================================================================================================
void DrawDebugProc(void)
{
	//変数宣言
	RECT rect = { 20,20,SCREEN_WIDTH,SCREEN_HEIGHT };
	char aStr[256];

	//文字列に代入
	sprintf(&aStr[0], "%s", g_aStrDebug);

	//テキスト描画
	g_pFont->DrawText(NULL, &aStr[0], -1, &rect, DT_LEFT,
		D3DCOLOR_RGBA(255, 255, 255, 255));

	//バッファのクリア
	memset(&g_aStrDebug, 0, sizeof(g_aStrDebug));
}

//==================================================================================================
//文字列設定処理
//==================================================================================================
int PrintDebugProc(const char *fmt, ...)
{
	int nResult = 0;
	va_list ArgList;

	//va_list初期化
	va_start(ArgList,fmt);

	/*for (const char* p = fmt; *p != '\0'; ++p)
	{
		va_arg();
	}*/

	return nResult;
}